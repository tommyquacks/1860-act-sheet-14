// Sys.vm


function Sys.init 0
    return

// Sys.min: Returns the minimum of two stack arguments
function Sys.min 0
    push argument 0    // Push first argument (a)
    push argument 1    // Push second argument (b)
    lt                 // a < b ? Sets D to -1 if true, 0 if false
    if-goto MIN_ARG0   // If a < b, return a
    push argument 1    // Else return b
    return
label MIN_ARG0
    push argument 0    // Return a
    return

// Sys.max: Returns the maximum of two stack arguments
function Sys.max 0
    push argument 0    // Push first argument (a)
    push argument 1    // Push second argument (b)
    gt                 // a > b ? Sets D to -1 if true, 0 if false
    if-goto MAX_ARG0   // If a > b, return a
    push argument 1    // Else return b
    return
label MAX_ARG0
    push argument 0    // Return a
    return

// Sys.range: Computes the range (max - min) of an array
function Sys.range 3
    // Local variables:
    // LCL[0] = min, LCL[1] = max, LCL[2] = i (loop counter)

    // Check if n <= 1
    push argument 1    // Push n
    push constant 1
    le                 // n <= 1 ? Sets D to -1 if true
    if-goto ZERO       // If n <= 1, return 0

    // Set THIS to the base address of the array
    push argument 0    // Array base address
    pop pointer 0      // THIS = array base address

    // Initialize min and max with the first element (array[0])
    push this 0        // array[0]
    pop local 0        // min = array[0]
    push this 0        // array[0]
    pop local 1        // max = array[0]

    // Initialize loop counter i = 1
    push constant 1
    pop local 2        // i = 1

label LOOP
    push local 2       // Push i
    push argument 1    // Push n
    ge                 // i >= n ? Sets D to -1 if true
    if-goto END_LOOP   // If i >= n, exit loop

    // Set THIS to address of array[i] (base + i)
    push argument 0    // Base address
    push local 2       // i
    add                // base + i
    pop pointer 0      // THIS = address of array[i]

    // Update min: min = Sys.min(min, array[i])
    push local 0       // Current min
    push this 0        // array[i]
    call Sys.min 2     // Call Sys.min with 2 arguments
    pop local 0        // Store new min

    // Update max: max = Sys.max(max, array[i])
    push local 1       // Current max
    push this 0        // array[i]
    call Sys.max 2     // Call Sys.max with 2 arguments
    pop local 1        // Store new max

    // Increment i
    push local 2
    push constant 1
    add
    pop local 2        // i = i + 1

    goto LOOP          // Repeat loop

label END_LOOP
    // Compute range: max - min
    push local 1       // Push max
    push local 0       // Push min
    sub                // max - min
    return

label ZERO
    push constant 0    // Return 0 for n <= 1
    return
